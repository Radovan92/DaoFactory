import { Address, ProviderRpcClient } from "everscale-inpage-provider";
import { AllowedCodes, MsgTree, OptionalContracts, TraceParams } from "./types";
import { Factory } from "../factory";
export declare class TracingInternal {
    private readonly ever;
    private readonly factory;
    private readonly endpoint;
    private readonly enabled;
    private readonly consoleContract;
    private _allowedCodes;
    constructor(ever: ProviderRpcClient, factory: Factory<any>, endpoint: string, enabled?: boolean);
    get allowedCodes(): AllowedCodes;
    setAllowedCodes(allowedCodes: OptionalContracts): void;
    setAllowedCodesForAddress(address: string | Address, allowedCodes: OptionalContracts): void;
    removeAllowedCodesForAddress(address: string | Address, codesToRemove: OptionalContracts): void;
    removeAllowedCodes(codesToRemove: OptionalContracts): void;
    trace({ inMsgId, allowedCodes }: TraceParams): Promise<MsgTree | undefined>;
    private printConsoleMsg;
    private buildMsgTree;
    private buildTracingTree;
    private findRevertedBranch;
    private depthSearch;
}
